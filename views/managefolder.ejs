<html lang="en" class="perfect-scrollbar-on"><head>
    <meta charset="utf-8">
    <link rel="apple-touch-icon" sizes="76x76" href="../assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="../assets/img/favicon.png">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>
     Manage Folder
    </title>
    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no" name="viewport">
    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,200" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
    <!-- CSS Files -->
    <link href="../../../assets2/css/bootstrap.min.css" rel="stylesheet">
    <link href="../../../assets2/css/now-ui-dashboard.css?v=1.5.0" rel="stylesheet">
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href="../../../assets2/demo/demo.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/perfect-scrollbar@1.5.0/css/perfect-scrollbar.min.css">
    <script src="https://cdn.jsdelivr.net/npm/perfect-scrollbar@1.5.0/dist/perfect-scrollbar.jquery.min.js"></script>
<!-- Include PDF.js from CDN -->
<!-- Bootstrap JS (Include this in your HTML <head> or before closing </body> tag) -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

    <!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">

<!-- DataTables jQuery -->
<style>
  /* Custom styles */
  .modal-content {
      background-color: #f9f9f9;
      border-radius: 10px;
  }

  /* Canvas container to ensure it fits the modal width */
  #pdf-canvas {
      width: 100%;
      height: 100%;
      max-height: 80vh; /* Set maximum height for scrolling */
      display: block;
      margin: 0 auto;
  }

  /* Dark mode styles */
  .dark-mode {
      background-color: #1c1c1c;
      color: white;
  }

  /* Light mode styles */
  .light-mode {
      background-color: white;
      color: black;
  }

  .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
  }

  .modal-footer {
      display: flex;
      justify-content: space-between;
  }

  .modal-footer button {
      margin-left: 5px;
  }

  /* Control buttons styling */
  .control-buttons button {
      margin: 0 5px;
      font-size: 14px;
  }

  .modal-body {
      overflow: auto;
  }

</style>

    <style>
       

        .folder-card {
          
            border-radius: 10px;
            padding: 1.5rem;
            
            transition: transform 0.2s, box-shadow 0.2s;
        
        }

        .folder-card:hover {
            transform: translateY(-20px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .folder-icon {
            color: var(--primary);
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .folder-meta {
            display: flex;
            justify-content: space-between;
            color: #666;
            font-size: 0.9rem;
            margin-top: 1rem;
        }

        .add-button {
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 50%;
            width: 56px;
            height: 56px;
            font-size: 1.5rem;
            cursor: pointer;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        @media (max-width: 600px) {
          
        
        }
    </style>
  <body class="">
    <div class="wrapper ">
      <%- include ('./partials/sidebar') %>
      <div class="main-panel ps" id="main-panel" style="min-height: 300px; overflow: hidden;">
        <!-- Navbar -->
        <%- include ('./partials/top') %>
        <!-- End Navbar -->
        <%- include ('./partials/messages') %>
        <div class="panel-header panel-header-sm">
        </div>
        <div class="content " id="container" >
            <div class="row">
                <div class="button-container">
                   
                    <button href="#" id="uploadfile" class="btn btn-neutral btn-icon btn-round btn-lg">
                        <i class="now-ui-icons arrows-1_cloud-upload-94"></i>
                       
                    </button>
                
                  </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                  <div class="card">
                    <div class="card-header">
                        <div class="card-header">
                            <h4 class="card-title">
                                <span id="breadcrumb"><%- navlocator %></span>
                            </h4>
                        </div>
                    </div>
                    <div class="card-body">
                      <div  class="row " id="folderContainer">
                        <!-- Sample folders -->
                        <% folders.forEach(function(folder) { %>
                          <div class="col-md-4 mb-2 folder-card">
                            <% if (folder.id != 1) { %>
                              <div class="dropdown ">
                                <button class="btn btn-sm btn-primary mt-2 dropdown-toggle" type="button" id="actionDropdown<%= folder.id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                 
                                </button>
                                <div class="dropdown-menu" aria-labelledby="actionDropdown<%= folder.id %>">
                                  <!-- Share Button -->
                                  <button class="dropdown-item share-btn" data-folder-id="<%= folder.id %>" data-folder-name="<%= folder.name %>" data-toggle="modal" data-target="#shareModal">
                                    <i class="fas fa-share-alt"></i> Share
                                  </button>
                                  <!-- Delete Button -->
                                  <a href="/selamcdms/filemanagement/deletefolder/<%= folder.id %>" class="dropdown-item" onclick="return confirm('Are you sure you want to delete this folder?');">
                                    <i class="fas fa-trash-alt"></i> Delete
                                  </a>
                                  <!-- Update Button -->
                                  <button class="dropdown-item share-btn" data-folder-id="<%= folder.id %>" data-folder-name="<%= folder.name %>" data-toggle="modal" data-target="#shareModal3">
                                    <i class="fas fa-pencil-alt"></i> Update
                                  </button>
                                </div>
                              </div>
                            <% } %>
                              <a href="/selamcdms/filemanagement/subfolder/<%= folder.id %>" class="">
                                  <span class="fa fa-folder fa-10x" style="color:#0c2646"></span>
                                  <h3 style="text-transform: uppercase;"><%= folder.name %></h3>
                              
                                  <div class="folder-meta">
                                      <span><%= folder.subfolderCount %> Folder</span>
                                      <span><%= folder.fileCount %> Files</span>
                                  </div>
                              </a>
                      
                              <!-- Share Button -->
                            
                           
                           
                          </div>
                      <% }); %>
                      
                       
                    </div>
                      
                        <div class="table-responsive" >
                          <button type="button" class="btn btn-warning" id="downloadSelectedFilesBtn">
                            Download Selected Files
                          </button>
                          <button type="button" class="btn btn-info" id="shareSelectedFilesBtn">
                            Share Selected Files
                          </button>
                          <button type="button" class="btn btn-danger" id="deleteSelectedFilesBtn">
                            Delete Selected Files
                          </button>
                          <table class="table" id="fileTable">
                            <thead class="text-primary">
                              <tr>
                                <th>#</th>
                                <th>File Name</th>
                                <th>Description</th>
                                <th>Date</th>
                                <th>Download</th>
                                <th class="text-right">Open</th>
                                <!-- <th class="text-right">Share</th> -->
                                <th class="text-right">Rename</th> 
                              </tr>
                            </thead>
                            <tbody>
                              <% files.forEach(function(file) { %>
                                <tr>
                                  <td><input type="checkbox" class="file-checkbox" data-file-id="<%= file.fileId %>" data-file-name="<%= file.fileName %>" data-file-path="<%= file.filePath %>"></td>
     
                                  <td><%= file.fileName %></td>
                                  <td><%= file.description %></td>
                                  <td><%= new Date(file.createdAt).toLocaleDateString() %> G.C</td>
                                  <td>
                                    <a href="/selamcdms/<%= file.filePath %>" 
                                       download="<%= file.fileName %>" 
                                       class="btn btn-warning btn-sm">
                                      Download
                                    </a>
                                  </td>
                              

                                  <td class="text-right">
                                    <a href="/selamcdms<%= file.filePath %>" class="btn btn-primary btn-sm" target="_blank">
                                      Open
                                    </a>
                                   
                                  </td>
                              
                                  <!-- <td class="text-right">
                                    <button class="btn btn-info btn-sm shareBtn" data-file-id="<%= file.fileId %>" data-toggle="modal" data-target="#shareModal2">
                                      Share
                                    </button>
                                  </td> -->
                                  <td class="text-right">
                                    <button class="btn btn-secondary btn-sm" type="button" onclick="confirmRename('<%= file.fileId %>','<%= file.fileName %>')">
                                      Rename
                                    </button>
                                  </td>
                                </tr>
                               
                              <% }); %>
                              
                            </tbody>
                          </table>
                          
                           
                        </div>
                      
                        <button class="add-button"  id="addfolder" >
                            <i class="now-ui-icons ui-1_simple-add"></i>
                            
                        </button>
                       
                    
                       
                    </div>
                  </div>
                </div>
              
              </div>
        </div>
        <%- include ('./partials/footer') %>
      </div>
    <!--   Core JS Files   -->
   <!-- Modal Structure for PDF Viewer -->
<div id="pdfModal" class="modal" style="width: 100%; height: 600px; margin-top: 20px;" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-xl" role="document">
      <div class="modal-content">
          <div class="modal-header">
            <div class="control-buttons">
              <button type="button" class="btn btn-primary" id="prev-page">Previous</button>
              <span id="page-num"></span> / <span id="page-count"></span>
              <button type="button" class="btn btn-primary" id="next-page">Next</button>
              <!-- Zoom Controls -->
              <button type="button" class="btn btn-secondary" id="zoom-in">Zoom In</button>
              <button type="button" class="btn btn-secondary" id="zoom-out">Zoom Out</button>
              <!-- Toggle light/dark mode -->
              <button type="button" class="btn btn-dark" id="toggle-mode">Dark Mode</button>
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
          <div class="modal-body">
              <!-- Canvas to render the PDF -->
              <canvas id="pdf-canvas" ></canvas>
          </div>
          <div class="modal-footer">
              <!-- Navigation Controls -->
        
          </div>
      </div>
  </div>
</div>

    <div class="modal fade" id="addFolderModal" tabindex="-1" role="dialog" aria-labelledby="addFolderModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addFolderModalLabel">Add New Folder</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="addFolderForm">
              <div class="form-group">
                <label for="folderName">Folder Name</label>
                <input type="text" class="form-control mb-2" id="folderName" placeholder="Enter folder name">
                <input type="hidden" class="form-control" id="parentFolderId"  name="parentFolderId" value="<%= folderid %>">
                <input type="hidden" class="form-control" id="parentFolderName"  name="parentFolderName">
                
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="createFolderBtn">Create Folder</button>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Upload File Modal -->
    <div class="modal fade" id="uploadFileModal" tabindex="-1" role="dialog" aria-labelledby="uploadFileModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="uploadFileModalLabel">Upload File</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="uploadFileForm">
            
              <div class="form-group">
                  <label for="fileUpload">Description</label>
                  <textarea type="text" class="form-control" id="description" name="description"></textarea>
                  <input type="hidden" class="form-control" id="folderId"  name="folderId" value="<%= partnerid %>">
                </div>
                <div class="form-group">
                  <label for="fileUpload">To Upload File Click Here</label>
                  <input type="file" class="form-control-file" id="fileUpload" multiple accept=".doc, .docx, .pdf, .accdb, .xls, .xlsx">
            <div id="fileList"></div>
                </div>
            </form>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="uploadBtn">Upload</button>
          </div>
        </div>
      </div>
    </div>
    <!-- Bootstrap Modal for file viewing -->
    <div class="modal fade" id="shareModal" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title" id="shareModalLabel">Share Folder</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                  </button>
              </div>
              <div class="modal-body">
                  <form id="shareFolderForm">
                      <input type="hidden" id="selectedFolderId" name="folderId">
  
                      <p>Share folder <strong id="selectedFolderName"></strong> with:</p>
                      
                      <!-- User Selection (Multiple) -->
                      <select id="users" name="users" class="form-control userSelect" multiple required style="width: 100%;">
                          <% userlist.forEach(function(user) { %>
                              <option value="<%= user.user_id %>"><%= user.username %> (<%= user.fullname %>)</option>
                          <% }); %>
                      </select>
                      
                      <button type="submit" class="btn btn-success mt-3">
                          <i class="fas fa-check"></i> Share
                      </button>
                  </form>
              </div>
          </div>
      </div>
  </div>
  <div class="modal fade" id="shareModal2" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="shareModalLabel">Share File</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h6>Select Files to Share:</h6>
          <ul id="fileListToShare" style="list-style: none; padding-left: 0;"></ul> <!-- List of selected files -->
          
          <h6>Select Users to Share:</h6>
          <select id="userSelect2" name="users" class="form-control" multiple required style="width: 100%;">
            <% userlist.forEach(function(user) { %>
                <option value="<%= user.user_id %>"><%= user.username %> (<%= user.fullname %>)</option>
            <% }); %>
        </select>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="shareFileBtn">Share</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="shareModal3" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="shareModalLabel">Update Folder Name</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h6>Enter Folder Name:</h6>
         <input type="text" class="form-control" name="foldername" id="foldername">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="updateFolderNameBtn">Update</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="downloadModal" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="shareModalLabel">Download File</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h6>Select Files to Download:</h6>
          <ul id="fileListToDownload" style="list-style: none; padding-left: 0;"></ul> <!-- List of selected files -->
          
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="downloadFileBtn">Download</button>
        </div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="shareModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="shareModalLabel">Delete File</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h6>Select Files to Delete:</h6>
          <ul id="fileListToDelete" style="list-style: none; padding-left: 0;"></ul> <!-- List of selected files -->
          
          
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-danger" id="deleteFileBtn">Delete</button>
        </div>
      </div>
    </div>
  </div>
      <script src="../../../assets2/js/core/jquery.min.js"></script>

    <script src="../../../assets2/js/core/popper.min.js"></script>
    <script src="../../../assets2/js/core/bootstrap.min.js"></script>
    <!--  Google Maps Plugin    -->
    <!-- Chart JS -->
    <!--  Notifications Plugin    -->
    <script src="../../../assets2/js/plugins/bootstrap-notify.js"></script>
    <!-- Control Center for Now Ui Dashboard: parallax effects, scripts for the example pages etc -->
    <script src="../../../assets2/js/now-ui-dashboard.min.js?v=1.5.0" type="text/javascript"></script><!-- Now Ui Dashboard DEMO methods, don't include it in your project! -->
    <script src="../../../assets2/demo/demo.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js"></script>
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script>
  // Track selected files
let selectedFiles = [];

// Handle file checkbox selection
document.querySelectorAll('.file-checkbox').forEach(checkbox => {
  checkbox.addEventListener('change', function() {
    const fileId = this.dataset.fileId;
    const fileName = this.dataset.fileName;
    const filePath = this.dataset.filePath;

    if (this.checked) {
      // Add the file to the selectedFiles array
      selectedFiles.push({ fileId, fileName, filePath });
    } else {
      // Remove the file from the selectedFiles array
      selectedFiles = selectedFiles.filter(file => file.fileId !== fileId);
    }

    // Update the file list in the modal
    updateFileListInModal();
    updateFileListInModalD();
    updateFileListInModalDelete();
  });
});
function updateFileListInModalD() {
 // const fileListContainer = document.getElementById('fileListToShare');
 const fileListDContainer = document.getElementById('fileListToDownload');
  
 fileListDContainer.innerHTML = ''; // Clear current list
//  fileListDContainer.innerHTML='';
  selectedFiles.forEach(file => {
    const listItem = document.createElement('li');
    listItem.textContent = file.fileName;
    //fileListContainer.appendChild(listItem);
    fileListDContainer.appendChild(listItem);
  });
}
function updateFileListInModalDelete() {
 // const fileListContainer = document.getElementById('fileListToShare');
 const fileListDContainer = document.getElementById('fileListToDelete');
  
 fileListDContainer.innerHTML = ''; // Clear current list
//  fileListDContainer.innerHTML='';
  selectedFiles.forEach(file => {
    const listItem = document.createElement('li');
    listItem.textContent = file.fileName;
    //fileListContainer.appendChild(listItem);
    fileListDContainer.appendChild(listItem);
  });
}
// Update the selected files list in the modal
function updateFileListInModal() {
  const fileListContainer = document.getElementById('fileListToShare');
 // const fileListDContainer = document.getElementById('fileListToDownload');
  
  fileListContainer.innerHTML = ''; // Clear current list
//  fileListDContainer.innerHTML='';
  selectedFiles.forEach(file => {
    const listItem = document.createElement('li');
    listItem.textContent = file.fileName;
    fileListContainer.appendChild(listItem);
 //   fileListDContainer.appendChild(listItem);
  });
}

document.getElementById('shareSelectedFilesBtn').addEventListener('click', function() {
    if (selectedFiles.length === 0) {
      alert("Please select at least one file to share.");
      return;
    }

    // Populate the modal with selected files
    updateFileListInModal();

    // Show the modal
    $('#shareModal2').modal('show');
  });
document.getElementById('downloadSelectedFilesBtn').addEventListener('click', function() {
    if (selectedFiles.length === 0) {
      alert("Please select at least one file to share.");
      return;
    }

    // Populate the modal with selected files
    updateFileListInModalD();

    // Show the modal
    $('#downloadModal').modal('show');
  });
  document.getElementById('deleteSelectedFilesBtn').addEventListener('click', function() {
    if (selectedFiles.length === 0) {
      alert("Please select at least one file to delete.");
      return;
    }

    // Populate the modal with selected files
    updateFileListInModalDelete();

    // Show the modal
    $('#deleteModal').modal('show');
  });
// Handle sharing the selected files
document.getElementById('shareFileBtn').addEventListener('click', function() {
  const selectedUserIds = Array.from(document.getElementById('userSelect2').selectedOptions).map(option => option.value);
  
  if (selectedFiles.length === 0) {
    alert("Please select at least one file to share.");
    return;
  }
  
  if (selectedUserIds.length === 0) {
    alert("Please select at least one user to share the files with.");
    return;
  }

  // Now perform the share operation (example: sending selected files and users to the server)
  const data = {
    fileIds: selectedFiles.map(file => file.fileId),
    users: selectedUserIds
  };

  // Example AJAX request (make sure to adapt to your backend logic)
  fetch('/selamcdms/filemanagement/share-files', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify(data)
})
.then(response => response.json())
.then(result => {
  if (result.success_msg) {
    showNotification(result.success_msg, 'success');
    location.reload();
  } else if (result.error_msg) {
    showNotification(result.error_msg, 'error');
    location.reload();
  }
})
.catch(error => {
  console.error('Error:', error);
  showNotification("An error occurred while sharing the files.", 'error');
  location.reload();
});


});
document.getElementById('downloadFileBtn').addEventListener('click', function() {
  
  if (selectedFiles.length === 0) {
    alert("Please select at least one file to share.");
    return;
  }
  const selectedFileIds = selectedFiles.map(file => file.fileId);  // Assuming selectedFiles is an array of selected file objects

// Prepare the query string with selected file IDs
const queryString = new URLSearchParams({ selectedFileIds: selectedFileIds }).toString();

// Example fetch request with the correct HTTP method (GET)
fetch(`/selamcdms/filemanagement/downloadselecteduploads?${queryString}`, {
  method: 'GET',
})
.then(response => {
  if (response.ok) {
    return response.blob(); // Get the zip file as a Blob
  } else {
    throw new Error('Failed to download the files');
  }
})
.then(blob => {
  // Triggering the download
  const url = window.URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.style.display = 'none';
  a.href = url;
  a.download = 'selected_files_backup.zip'; // Default filename for the downloaded zip
  document.body.appendChild(a);
  a.click();
  window.URL.revokeObjectURL(url); // Clean up the URL object
  location.reload()
})
.catch(error => {
  console.error('Download error:', error);
  showNotification("An error occurred while downloading the files.", 'error');
});


  // Now perform the share operation (example: sending selected files and users to the server)

});


document.getElementById('deleteFileBtn').addEventListener('click', function() {
  
  if (selectedFiles.length === 0) {
    alert("Please select at least one file to delete.");
    return;
  }

  const selectedFileIds = selectedFiles.map(file => file.fileId);  // Get selected file IDs

  // Prepare data to send in the request body
  const data = {
    selectedFileIds: selectedFileIds,
  };

  // Example fetch request with the correct HTTP method (POST)
  fetch('/selamcdms/filemanagement/deleteselectedfiles', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),  // Send selected file IDs as JSON
  })
  .then(response => response.json())
  .then(result => {
    if (result.message) {
      showNotification(result.message, 'success');
      location.reload(); // Reload page to reflect changes
    } else {
      showNotification("An error occurred while deleting the files.", 'error');
    }
  })
  .catch(error => {
    console.error('Error deleting files:', error);
    showNotification("An error occurred while deleting the files.", 'error');
  });
});
function showNotification(message, type) {
  var notification = document.createElement('div');
  notification.className = `col-xs-11 col-sm-4 alert alert-${type} alert-with-icon`;
  notification.setAttribute('role', 'alert');
  notification.setAttribute('data-notify-position', 'top-right');
  notification.style.cssText = 'display: inline-block; margin: 0px auto; position: fixed; transition: 0.5s ease-in-out; z-index: 1060; top: 20px; right: 20px;';
  
  var closeButton = document.createElement('button');
  closeButton.setAttribute('type', 'button');
  closeButton.setAttribute('aria-hidden', 'true');
  closeButton.className = 'close';
  closeButton.setAttribute('data-notify', 'dismiss');
  closeButton.style.cssText = 'position: absolute; right: 10px; top: 50%; margin-top: -13px; z-index: 1062;';
  closeButton.innerHTML = '<i class="now-ui-icons ui-1_simple-remove"></i>';
  closeButton.onclick = function() {
    notification.style.display = 'none';
  };

  var icon = document.createElement('span');
  icon.setAttribute('data-notify', 'icon');
  icon.className = 'now-ui-icons ui-1_bell-53';

  var messageElement = document.createElement('span');
  messageElement.setAttribute('data-notify', 'message');
  messageElement.innerHTML = message;

  notification.appendChild(closeButton);
  notification.appendChild(icon);
  notification.appendChild(messageElement);

  document.body.appendChild(notification);
}

</script>
    <script>
      $(document).ready(function() {
         
          $("#addfolder").click(function(e) {
          e.preventDefault();
          $("#addFolderModal").modal('show');
        });
        $("#uploadfile").click(function(e) {
          e.preventDefault();
          $("#uploadFileModal").modal('show');
        });
        $("#uploadBtn").click(function() {
            uploadFiles();
             $("#uploadFileModal").modal('hide');
        });
            $("#fileUpload").change(function() {
          var files = $(this)[0].files;
          var fileListDiv = $("#fileList");
          fileListDiv.empty();
          
          if (files.length > 0) {
            fileListDiv.append("<p>Selected Files:</p>");
            var list = $("<ul></ul>");
            for (var i = 0; i < files.length; i++) {
              list.append("<li>" + files[i].name + "</li>");
            }
            fileListDiv.append(list);
          }
        });
    
    
        $("#createFolderBtn").click(function() {
                // folder creation logic here
                createFolder();
                $("#addFolderModal").modal('hide');
            });
    
      });
    
     


 </script>


    <script>
 async function uploadFiles() {
  const files = document.getElementById('fileUpload').files;
  const description = document.getElementById('description').value;
  const folderId = document.getElementById('folderId').value;

  if (files.length === 0) {
    alert('Please select files to upload.');
    return;
  }

  // Log the files and other data for debugging
  console.log('Selected files:', files);
  console.log('Description:', description);
  console.log('Folder ID:', folderId);

  const formData = new FormData();
  for (let i = 0; i < files.length; i++) {
    formData.append('files', files[i]);
  }

  // Add description and folderId to the FormData
  formData.append('description', description);
  formData.append('folderId', folderId);

  try {
    const response = await $.ajax({
      url: '/selamcdms/filemanagement/upload',
      type: 'POST',
      data: formData,
      contentType: false,
      processData: false,

      success: function(response) {
        console.log('Upload success:', response);
        alert('Files uploaded successfully!');
        location.reload();
      },
      error: function(xhr, status, error) {
        console.error('Upload error:', status, error);
        alert('Error uploading files. See console for details.');
      },
    });
  } catch (error) {
    console.error('Error uploading files:', error);
    alert('Error uploading files. See console for details.');
  }
}

  async function createFolder() {
      var folderName = $("#folderName").val();
      var parentFolderId = $("#parentFolderId").val();  
      var parentFolderName = $("#parentFolderName").val();  
      if (!folderName) {
          alert("Please enter a folder name.");
          return;
      }
  
      try {
          const response = await $.ajax({
              url: '/selamcdms/filemanagement/createFolder',
              type: 'POST',
              contentType: 'application/json',
              data: JSON.stringify({ folderName: folderName,parentFolderId:parentFolderId}),
          });
  
          console.log('Folder created:', response);
          alert('Folder created successfully!');
      location.reload();
      } catch (error) {
          console.error('Error creating folder:', error);
          alert('Error creating folder. See console for details.');
      }
  }
 
 
 </script>

 <script>
   // Initialize Select2 on your select element
   $(document).ready(function() {
     $('#users').select2({
       placeholder: "Select users",
       allowClear: true
     });

     $('#userSelect2').select2({
       placeholder: "Select users",
       allowClear: true
     });
   });

   
 </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

 <script>
   
$(document).ready(function() {
  $('#fileTable').DataTable({
                  "pageLength": 10,   // Set the default page length to 10 items
                  "searching": true,  // Enable search functionality
                  "paging": true,     // Enable paging functionality
                  "ordering": true,   // Enable sorting
                  "info": true        // Display info about the table
              });
        const container = document.querySelector('#container');
        new PerfectScrollbar(container, {
            suppressScrollX: true, // Disable horizontal scroll
            useBothWheelAxes: true, // Allow scrolling with both axes (vertical & horizontal)
            wheelSpeed: 1, // Speed of scrolling
            wheelPropagation: true, // Allow scrolling to propagate outside the element
        });
    });
</script>

<script>
  $(document).ready(function() {
      // Open modal with folder details
      $(".share-btn").click(function() {
          var folderId = $(this).data("folder-id");
          var folderName = $(this).data("folder-name");

          $("#selectedFolderId").val(folderId);
          $("#selectedFolderName").text(folderName);
      });

      // Handle Share Submission via AJAX
      $("#shareFolderForm").submit(function(event) {
          event.preventDefault();

          var folderId = $("#selectedFolderId").val();
          var selectedUsers = $("#users").val(); // Get selected users

          $.ajax({
              url: "/selamcdms/filemanagement/share-folder",
              type: "POST",
              data: { folderId: folderId, users: selectedUsers },
              success: function(response) {
                $.notify({
            message: response.message // Using the message from the server
        }, {
            type: 'success', // Type of notification
            placement: {
                from: "top", 
                align: "right"
            },
            offset: {
                x: 20,
                y: 60
            },
            delay: 5000, // Time before hiding the notification
            z_index: 1050
        });
        $("#shareModal").modal("hide");
              },
              error: function(xhr, status, error) {
                var errorMessage = xhr.responseJSON && xhr.responseJSON.error ? xhr.responseJSON.error : "An unknown error occurred.";
        
        $.notify({
            message: errorMessage // Using the error from the server
        }, {
            type: 'danger', // Type of notification
            placement: {
                from: "top", 
                align: "right"
            },
            offset: {
                x: 20,
                y: 60
            },
            delay: 5000, // Time before hiding the notification
            z_index: 1050
        });
              }
          });
      });
  });
</script>

<script>
  function confirmRename(fileId, currentFileName) {
  // Extract the file extension from the current file name
  const fileExtension = currentFileName.split('.').pop();

  // Ask the user for a new name without changing the extension
  const newName = prompt("Enter the new name for the file (without the extension):", currentFileName.replace(`.${fileExtension}`, ''));

  if (newName) {
    // Send the new name and fileId to the backend via a POST request
    fetch('/selamcdms/filemanagement/renamefile', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        fileId: fileId,
        newFileName: newName,
        fileExtension: fileExtension,
      }),
    })
    .then(response => response.json())
    .then(result => {
      if (result.message) {
        alert(result.message); // Show success message
        location.reload(); // Reload the page to reflect the changes
      } else {
        alert('Error: ' + result.error_msg);
      }
    })
    .catch(error => {
      console.error('Error renaming file:', error);
      alert('An error occurred while renaming the file.');
    });
  }
}

  function confirmDelete(fileId) {
    if (confirm('Are you sure you want to delete this file?')) {
      $.ajax({
        url: '/selamcdms/filemanagement/deletefile/' + fileId,
        type: 'POST',
        success: function(response) {
          alert(response.message); // Show success message
          // Optionally, you can remove the row from the table after deletion
          location.reload(); // Reload the page or remove the element from DOM dynamically
        },
        error: function(err) {
          alert('Error deleting file');
        }
      });
    }
  }
</script>
<script>
  $(document).ready(function() {
  // When the update button is clicked
  $('#updateFolderNameBtn').click(function() {
    // Get the folder ID and new folder name
    var folderId = $('#shareModal3').data('folder-id');
    var folderName = $('#foldername').val();
    
    if (folderName.trim() === '') {
      alert('Please enter a folder name.');
      return;
    }

    // Send AJAX request to update folder name
    $.ajax({
      url: '/selamcdms/filemanagement/updatefolder',  // Replace with your update route
      method: 'POST',
      data: {
        folderId: folderId,
        folderName: folderName
      },
      success: function(response) {
        if (response.success) {
          alert('Folder name updated successfully!');
          location.reload();
          // Optionally close the modal after success
          $('#shareModal3').modal('hide');
          
          // You can update the folder name in the UI here if needed
          // Example:
          // $('span[data-folder-id="' + folderId + '"]').text(folderName);
        } else {
          alert('Error updating folder: ' + response.error);
        }
      },
      error: function(xhr, status, error) {
        alert('An error occurred while updating the folder.');
      }
    });
  });

  // When the modal is opened, set the folder ID
  $('#shareModal3').on('show.bs.modal', function(event) {
    var button = $(event.relatedTarget); // Button that triggered the modal
    var folderId = button.data('folder-id');
    var folderName = button.data('folder-name');

    // Set the folder ID and name in the modal
    $(this).data('folder-id', folderId);
    $('#foldername').val(folderName);
  });
});

</script>
  </body></html>